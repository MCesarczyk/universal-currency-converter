{"version":3,"sources":["assets/images/background.png","core/Container/styled.js","core/Container/index.js","core/Form/Clock/styled.js","core/Form/Clock/index.js","core/Form/Clock/useCurrentDate.js","core/Form/Buttons/styled.js","core/Form/Buttons/index.js","common/ContentWrapper/index.js","core/Form/styled.js","core/Form/currenciesLabels.js","core/Form/index.js","core/Form/useCurrentRates.js","core/Switcher/styled.js","core/Switcher/index.js","core/languages.js","core/App.js","core/useLocalStorageState.js","reportWebVitals.js","GlobalStyle.js","index.js","theme.js"],"names":["ContainerWrapper","styled","div","background","theme","color","breakpoint","xl","ContainerElement","innerContainerBackground","md","sm","Container","children","ClockContainer","ClockElement","p","Clock","languages","language","date","useState","Date","setDate","useEffect","clockInterval","setInterval","clearInterval","useCurrentDate","clockLabel","toLocaleString","weekday","day","month","hour","minute","second","ButtonsContainer","xs","Button","button","elementsText","props","reset","crimson","emerald","Buttons","mainButtonLabel","type","resetButtonLabel","ContentWrapper","label","attrs","direction","vertical","Fieldset","fieldset","Legend","legend","elementsBackground","LabelText","span","FormInput","input","FormSelect","select","FormAnnotation","labelsEnglish","AUD","BGN","BRL","CAD","CHF","CLP","CNY","CZK","DKK","EUR","GBP","HKD","HRK","HUF","IDR","ILS","INR","ISK","JPY","KRW","MXN","MYR","NOK","NZD","PHP","PLN","RON","RUB","SEK","SGD","THB","TRY","UAH","USD","XDR","ZAR","labelsPolish","Form","headerTitle","inputLabel","listTitle","resultTitle","resultLabel","ratesData","status","base","rates","setRatesData","getRates","a","fetch","response","ok","Error","json","console","log","message","setTimeout","useCurrentRates","inputRef","useRef","checkingDate","setCheckingDate","newAmount","setNewAmount","currentCurrency","setCurrentCurrency","wantedCurrency","setWantedCurrency","result","setResult","currenciesLabels","filteredRates","Object","fromEntries","entries","filter","id","keys","includes","getExchangeRate","values","findIndex","key","onSubmit","event","preventDefault","toFixed","dateLabel","current","focus","onReset","ref","value","placeholder","inputPlaceholder","min","step","required","autoFocus","onChange","target","loadingMessage","errorMessage","currentCurrencyLabel","name","map","indexOf","wantedCurrencyLabel","LanguageButtons","Switcher","setLanguage","onLanguageChange","onClick","EN","PL","App","keyName","initialValue","localStorage","getItem","JSON","parse","state","setState","setItem","stringify","useLocalStorageState","document","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","lg","xxl","getElementById"],"mappings":"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","file":"static/js/main.fce4bf51.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.33e64e6f.png\";","import styled from \"styled-components\";\r\nimport background from \"../../assets/images/background.png\";\r\n\r\nexport const ContainerWrapper = styled.div`\r\n    background-image: url(\"${background}\");\r\n    background-size: contain;\r\n    background-position: center;\r\n    background-attachment: scroll;\r\n    background-color: ${({ theme }) => theme.color.background};\r\n    max-width: ${({ theme }) => theme.breakpoint.xl};\r\n    margin: 0 auto;\r\n    min-height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const ContainerElement = styled.div`\r\n    padding: 12px 24px;\r\n    border-radius: 24px;\r\n    background-color: ${({ theme }) => theme.color.innerContainerBackground};\r\n    width: ${({ theme }) => theme.breakpoint.md};\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.md}) {\r\n        width: 100%;\r\n    }\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.sm}) {\r\n        padding: 12px;\r\n    }\r\n`;","import { ContainerWrapper, ContainerElement } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <ContainerWrapper>\r\n        <ContainerElement>\r\n            {children}\r\n        </ContainerElement>\r\n    </ContainerWrapper>\r\n);\r\n\r\nexport default Container;","import styled from \"styled-components\";\r\n\r\nexport const ClockContainer = styled.div`\r\n    display: flex;\r\n    align-items: flex-start;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nexport const ClockElement = styled.p`\r\n    font-family: monospace;\r\n    font-size: 12px;\r\n    margin: 0 0 24px 0;\r\n    text-align: center;\r\n`;","import { useCurrentDate } from \"./useCurrentDate\";\r\nimport { ClockContainer, ClockElement } from \"./styled\";\r\n\r\nconst Clock = ({ languages, language }) => {\r\n    const date = useCurrentDate();\r\n\r\n    return (\r\n        <ClockContainer>\r\n            <ClockElement>\r\n                {languages[language].clockLabel}\r\n                {\" \"}\r\n                {date.toLocaleString(language, {\r\n                    weekday: \"long\",\r\n                    day: \"numeric\",\r\n                    month: \"long\",\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                    second: \"2-digit\"\r\n                })}\r\n            </ClockElement>\r\n        </ClockContainer>\r\n    );\r\n};\r\n\r\nexport default Clock;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const clockInterval = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(clockInterval);\r\n        };\r\n    }, []);\r\n\r\n    return date;\r\n};","import styled from \"styled-components\";\r\n\r\nexport const ButtonsContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.xs}) {\r\n            flex-direction: column;\r\n            align-items: center;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    color: ${({ theme }) => theme.color.elementsText};\r\n    background-color: ${({ theme }) => props => props.reset ? theme.color.crimson : theme.color.emerald};\r\n    border: none;\r\n    display: inline-block;\r\n    border-radius: 20px;\r\n    padding: 8px 16px;\r\n    margin: 5px 10px;\r\n    width: 45%;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.xs}) {\r\n        width: 100%;\r\n    }\r\n\r\n    &:hover {\r\n        filter: brightness(110%);\r\n    }\r\n\r\n    &:active {\r\n        filter: brightness(120%);\r\n    }\r\n`;","import { ButtonsContainer, Button } from \"./styled\";\r\n\r\nconst Buttons = ({ languages, language }) => (\r\n    <ButtonsContainer>\r\n        <Button>\r\n            {languages[language].mainButtonLabel}\r\n        </Button>\r\n        <Button reset type=\"reset\">\r\n            {languages[language].resetButtonLabel}\r\n        </Button>\r\n    </ButtonsContainer>\r\n);\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const ContentWrapper = styled.label.attrs(props => ({\r\n    type: \"text\",\r\n    direction: props.vertical ? \"column\" : \"row\",\r\n}))`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-direction: ${props => props.direction};\r\n    gap: 10px;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.sm}) {\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Fieldset = styled.fieldset`\r\n    border-radius: 20px;\r\n    padding: 16px 32px;\r\n    margin-bottom: 10px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.xs}) {\r\n        padding: 16px;\r\n    }\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n    color: ${({ theme }) => theme.color.elementsText};\r\n    background-color: ${({ theme }) => theme.color.elementsBackground};\r\n    padding: 8px 24px;\r\n    border-style: none;\r\n    border-radius: 20px;\r\n    text-align: center;\r\n    width: 200px;\r\n`;\r\n\r\nexport const LabelText = styled.span`\r\n    display: block;\r\n    min-width: 150px;\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n    width: 50%;\r\n    border-radius: 8px;\r\n    height: 32px;\r\n    padding-left: 8px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.md}) {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const FormSelect = styled.select`\r\n    width: 100%;\r\n    border-radius: 8px;\r\n    height: 32px;\r\n    padding-left: 8px;\r\n`;\r\n\r\nexport const FormAnnotation = styled.p`\r\n    font-size: 12px;\r\n    text-align: right;\r\n`;","export const labelsEnglish = {\r\n    AUD: \"Australian Dollar\",\r\n    BGN: \"Bulgarian Lev\",\r\n    BRL: \"Brazilian real\",\r\n    CAD: \"Canadian dollar\",\r\n    CHF: \"Swiss franc\",\r\n    CLP: \"Peso\",\r\n    CNY: \"Yuan renminbi\",\r\n    CZK: \"Czech Koruna\",\r\n    DKK: \"Danish Krone\",\r\n    EUR: \"Euro\",\r\n    GBP: \"Pound sterling\",\r\n    HKD: \"Hong Kong Dollar\",\r\n    HRK: \"Croatian Kuna\",\r\n    HUF: \"Hungarian Forint\",\r\n    IDR: \"Indonesian rupee\",\r\n    ILS: \"Israel new shekel\",\r\n    INR: \"Rupee\",\r\n    ISK: \"Icelandic Krona\",\r\n    JPY: \"Japanese yen\",\r\n    KRW: \"South Korean won\",\r\n    MXN: \"Mexican Peso\",\r\n    MYR: \"Malaysian ringgit\",\r\n    NOK: \"Norwegian krone\",\r\n    NZD: \"New Zealand dollar\",\r\n    PHP: \"Philippine Peso\",\r\n    PLN: \"Polish zloty\",\r\n    RON: \"Romanian Leu\",\r\n    RUB: \"Russian ruble\",\r\n    SEK: \"Swedish Krona\",\r\n    SGD: \"Singapore dollar\",\r\n    THB: \"Thailand bat\",\r\n    TRY: \"Turkish lira\",\r\n    UAH: \"Ukrainian hryvnia\",\r\n    USD: \"US dollar\",\r\n    XDR: \"Special Drawing Rights\",\r\n    ZAR: \"South African rand\",\r\n};\r\n\r\nexport const labelsPolish = {\r\n    AUD: \"Dolar australijski\",\r\n    BGN: \"Lew bułgarski\",\r\n    BRL: \"Real brazylijski\",\r\n    CAD: \"Dolar kanadyjski\",\r\n    CHF: \"Frank szwajcarski\",\r\n    CLP: \"Peso\",\r\n    CNY: \"Yuan renminbi\",\r\n    CZK: \"Korona czeska\",\r\n    DKK: \"Korona duńska\",\r\n    EUR: \"Euro\",\r\n    GBP: \"Funt szterling\",\r\n    HKD: \"Dolar hongkoński\",\r\n    HRK: \"Kuna chorwacka\",\r\n    HUF: \"Forint węgierski\",\r\n    IDR: \"Rupia Indonezyjska\",\r\n    ILS: \"Nowy szekel Izraelski\",\r\n    INR: \"Rupia\",\r\n    ISK: \"Korona islandzka\",\r\n    JPY: \"Jen japoński\",\r\n    KRW: \"Won Południowokoreański\",\r\n    MXN: \"Peso meksykańskie\",\r\n    MYR: \"Ringgit malezyjski\",\r\n    NOK: \"Korona norweska\",\r\n    NZD: \"Dolar nowozelandzki\",\r\n    PHP: \"Peso filipińskie\",\r\n    PLN: \"Polski złoty\",\r\n    RON: \"Lej rumuński\",\r\n    RUB: \"Rubel rosyjski\",\r\n    SEK: \"Korona szwedzka\",\r\n    SGD: \"Dolar singapurski\",\r\n    THB: \"Bat Tajski\",\r\n    TRY: \"Lira turecka\",\r\n    UAH: \"Hrywna ukraińska\",\r\n    USD: \"Dolar amerykański\",\r\n    XDR: \"SDR (MFW)\",\r\n    ZAR: \"Rand RPA\",\r\n};\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useCurrentRates } from \"./useCurrentRates\";\r\nimport Clock from \"./Clock\";\r\nimport Buttons from \"./Buttons\";\r\nimport { ContentWrapper } from \"../../common/ContentWrapper\";\r\nimport {\r\n  Fieldset,\r\n  Legend,\r\n  LabelText,\r\n  FormInput,\r\n  FormSelect,\r\n  FormAnnotation\r\n} from \"./styled\";\r\nimport { labelsEnglish, labelsPolish } from \"./currenciesLabels\";\r\n\r\nconst Form = ({\r\n  languages,\r\n  language,\r\n  headerTitle,\r\n  inputLabel,\r\n  listTitle,\r\n  resultTitle,\r\n  resultLabel\r\n}) => {\r\n  const ratesData = useCurrentRates();\r\n  const status = ratesData.status;\r\n  const date = ratesData.date;\r\n  const rates = ratesData.rates;\r\n  const inputRef = useRef(null);\r\n\r\n  const [checkingDate, setCheckingDate] = useState(\"\");\r\n  const [newAmount, setNewAmount] = useState(\"\");\r\n  const [currentCurrency, setCurrentCurrency] = useState(\"EUR\");\r\n  const [wantedCurrency, setWantedCurrency] = useState(\"USD\");\r\n  const [result, setResult] = useState([]);\r\n\r\n  const onCurrentCurrencyChange = ({ target }) => {\r\n    setCurrentCurrency(target.value);\r\n  };\r\n\r\n  const onWantedCurrencyChange = ({ target }) => {\r\n    setWantedCurrency(target.value);\r\n  };\r\n\r\n  const currenciesLabels = language === \"PL\" ? labelsPolish : labelsEnglish;\r\n\r\n  let filteredRates = null;\r\n\r\n  const filterRatesObject = () => {\r\n    if (rates) {\r\n      filteredRates = Object.fromEntries(Object.entries(rates).filter(\r\n        ([id]) => Object.keys(currenciesLabels).includes(id)));\r\n    };\r\n  };\r\n\r\n  filterRatesObject();\r\n\r\n  useEffect(() => {\r\n    console.log(`Exchange: ${currentCurrency}/${wantedCurrency}`);\r\n  }, [currentCurrency, wantedCurrency]);\r\n\r\n  const getExchangeRate = () => {\r\n    if (filteredRates) {\r\n      return (\r\n        Object.values(filteredRates)[Object.keys(filteredRates).findIndex(key => key === currentCurrency)]\r\n        /\r\n        Object.values(filteredRates)[Object.keys(filteredRates).findIndex(key => key === wantedCurrency)]\r\n      );\r\n    }\r\n  };\r\n\r\n  const calculateResult = () => {\r\n    setResult([(newAmount / getExchangeRate()).toFixed(2), \" \", wantedCurrency]);\r\n  };\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    calculateResult();\r\n    setCheckingDate(`${languages[language].dateLabel}${date}`);\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const onFormReset = (event) => {\r\n    event.preventDefault();\r\n\r\n    setNewAmount(\"\");\r\n    setResult(\"\");\r\n    setCheckingDate(\"\");\r\n    setCurrentCurrency(\"EUR\");\r\n    setWantedCurrency(\"USD\");\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onFormSubmit} onReset={onFormReset}>\r\n      <Fieldset>\r\n        <Legend>{headerTitle}</Legend>\r\n        <Clock\r\n          languages={languages}\r\n          language={language}\r\n        />\r\n        <ContentWrapper>\r\n          <LabelText>\r\n            {inputLabel}\r\n          </LabelText>\r\n          <FormInput\r\n            ref={inputRef}\r\n            value={newAmount}\r\n            placeholder={languages[language].inputPlaceholder + currentCurrency}\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"any\"\r\n            required\r\n            autoFocus\r\n            onChange={({ target }) => setNewAmount(target.value)}\r\n          />\r\n        </ContentWrapper>\r\n      </Fieldset>\r\n      <Fieldset>\r\n        <Legend>{listTitle}</Legend>\r\n        <ContentWrapper vertical>\r\n          {status === \"loading\" ? (\r\n            <LabelText>\r\n              {languages[language].loadingMessage}\r\n            </LabelText>\r\n          ) : (status === \"error\" ? (\r\n            <LabelText>\r\n              {languages[language].errorMessage}\r\n            </LabelText>\r\n          ) : (\r\n            <>\r\n              <ContentWrapper>\r\n                <LabelText>\r\n                  {languages[language].currentCurrencyLabel}\r\n                </LabelText>\r\n                <FormSelect name=\"currentCurrency\" value={currentCurrency} onChange={onCurrentCurrencyChange}>\r\n                  {Object.keys(filteredRates).map((key, value) => (\r\n                    <option key={key} value={key}>\r\n                      {(1 / (Object.values(filteredRates)[value])).toFixed(4)}\r\n                      {\" - \"}\r\n                      {key}\r\n                      {\" - \"}\r\n                      {Object.values(currenciesLabels)[Object.keys(currenciesLabels).indexOf(key)]}\r\n                    </option>\r\n                  ))}\r\n                </FormSelect>\r\n              </ContentWrapper>\r\n              <ContentWrapper>\r\n                <LabelText>\r\n                  {languages[language].wantedCurrencyLabel}\r\n                </LabelText>\r\n                <FormSelect name=\"wantedCurrency\" value={wantedCurrency} onChange={onWantedCurrencyChange}>\r\n                  {Object.keys(filteredRates).map((key, value) => (\r\n                    <option key={key} value={key}>\r\n                      {(1 / (Object.values(filteredRates)[value])).toFixed(4)}\r\n                      {\" - \"}\r\n                      {key}\r\n                      {\" - \"}\r\n                      {Object.values(currenciesLabels)[Object.keys(currenciesLabels).indexOf(key)]}\r\n                    </option>\r\n                  ))}\r\n                </FormSelect>\r\n              </ContentWrapper>\r\n            </>\r\n          ))}\r\n        </ContentWrapper>\r\n      </Fieldset>\r\n      <Fieldset>\r\n        <Legend>{resultTitle}</Legend>\r\n        <ContentWrapper>\r\n          <LabelText>\r\n            {resultLabel}\r\n          </LabelText>\r\n          <div>\r\n            {result}\r\n          </div>\r\n        </ContentWrapper>\r\n        <FormAnnotation>\r\n          {checkingDate}\r\n        </FormAnnotation>\r\n        <Buttons\r\n          languages={languages}\r\n          language={language}\r\n        />\r\n      </Fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form;","import { useEffect, useState } from \"react\";\r\n\r\nexport const useCurrentRates = () => {\r\n  const [ratesData, setRatesData] = useState({\r\n    status: \"loading\",\r\n    base: \"EUR\",\r\n    date: null,\r\n    rates: null\r\n  });\r\n\r\n  const requestURL = 'https://api.exchangerate.host/latest';\r\n\r\n  useEffect(() => {\r\n    const getRates = async () => {\r\n      try {\r\n        const response = await fetch(requestURL);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"No response\");\r\n        }\r\n\r\n        const { base, date, rates } = await response.json();\r\n\r\n        if (!rates) {\r\n          throw new Error(\"No rates data\");\r\n        }\r\n\r\n        if (base !== ratesData.base) {\r\n          throw new Error(`Wrong currency base: ${base}`);\r\n        }\r\n\r\n        setRatesData({\r\n          status: \"success\",\r\n          base: base,\r\n          date: date,\r\n          rates: rates\r\n        });\r\n\r\n      } catch (error) {\r\n        setRatesData({ status: \"error\" });\r\n        console.log(error.message);\r\n      }\r\n    };\r\n\r\n    setTimeout(getRates, 2_000);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return ratesData;\r\n};","import styled from \"styled-components\";\r\n\r\nexport const LanguageButtons = styled.div`\r\n    text-align: right;\r\n`;","import { LanguageButtons } from \"./styled\";\r\n\r\nconst Switcher = ({ languages, setLanguage }) => {\r\n\r\n    const onLanguageChange = ({ target }) => {\r\n        setLanguage(target.value);\r\n    };\r\n\r\n    return (\r\n        <LanguageButtons>\r\n            {Object.keys(languages).map((key) => (\r\n                <button\r\n                    key={key}\r\n                    value={key}\r\n                    onClick={onLanguageChange}\r\n                >\r\n                    {key}\r\n                </button>\r\n            ))}\r\n        </LanguageButtons>\r\n    )\r\n};\r\n\r\nexport default Switcher;","const languages = {\r\n  EN: {\r\n    headerTitle: \"Currency converter\",\r\n    inputLabel: \"You give:\",\r\n    inputPlaceholder: \"Amount in \",\r\n    currentCurrencyLabel: \"Current currency\",\r\n    wantedCurrencyLabel: \"Wanted currency\",\r\n    listTitle: \"Currencies selection\",\r\n    resultTitle: \"Calculated amount\",\r\n    resultLabel: \"You get: \",\r\n    clockLabel: \"Today is \",\r\n    loadingMessage: \"Loading... please wait\",\r\n    errorMessage: \"Unable to fetch data...\\n\" +\r\n    \"please check your internet connection.\",\r\n    mainButtonLabel: \"Calculate\",\r\n    resetButtonLabel: \"Reset\",\r\n    dateLabel: \"*rate valid on: \"\r\n  },\r\n  PL: {\r\n    headerTitle: \"e-Kantor\",\r\n    inputLabel: \"Wpłacasz:\",\r\n    inputPlaceholder: \"Kwota w \",\r\n    currentCurrencyLabel: \"Bieżąca waluta\",\r\n    wantedCurrencyLabel: \"Oczekiwana waluta\",\r\n    listTitle: \"Wybór walut\",\r\n    resultTitle: \"Otrzymana kwota\",\r\n    resultLabel: \"Dostajesz: \",\r\n    clockLabel: \"Dzisiaj jest \",\r\n    loadingMessage: \"Pobieranie danych...\",\r\n    errorMessage: \"Nie udało się pobrać danych...\\n\" +\r\n    \"sprawdź swoje połączenie internetowe\",\r\n    mainButtonLabel: \"Przelicz\",\r\n    resetButtonLabel: \"Wyczyść\",\r\n    dateLabel: \"*wg kursu z dnia: \"\r\n  }\r\n};\r\n\r\nexport default languages;","import Container from \"./Container\";\r\nimport Form from \"./Form\";\r\nimport Switcher from \"./Switcher\";\r\nimport languages from \"./languages\";\r\nimport { useLocalStorageState } from \"./useLocalStorageState\";\r\n\r\nconst App = () => {\r\n  const [language, setLanguage] = useLocalStorageState(\"language\", \"EN\");\r\n\r\n  document.title = languages[language].headerTitle;\r\n\r\n  return (\r\n    <Container>\r\n      <Switcher\r\n        languages={languages}\r\n        language={language}\r\n        setLanguage={setLanguage}\r\n      />\r\n      <Form\r\n        languages={languages}\r\n        language={language}\r\n        headerTitle={languages[language].headerTitle}\r\n        inputLabel={languages[language].inputLabel}\r\n        listTitle={languages[language].listTitle}\r\n        resultTitle={languages[language].resultTitle}\r\n        resultLabel={languages[language].resultLabel}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useLocalStorageState = (keyName, initialValue) => {\r\n    const getInitialState = () => {\r\n        const localStorageState = localStorage.getItem(keyName);\r\n        if (localStorageState === null) {\r\n            return initialValue;\r\n        }\r\n\r\n        return JSON.parse(localStorage.getItem(keyName));\r\n    };\r\n    const [state, setState] = useState(getInitialState);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(keyName, JSON.stringify(state))\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [state]);\r\n\r\n    return [state, setState];\r\n};","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n\r\nhtml {\r\n  box-sizing: border-box;\r\n  height: 100%;\r\n}\r\n\r\n*, ::after, ::before {\r\n  box-sizing: inherit;\r\n}\r\n\r\n#root {\r\n  height: 100%;\r\n}\r\n\r\nbody {\r\n  font-family: 'Ubuntu', sans-serif;\r\n  background-color: ${({ theme }) => theme.color.background};\r\n  max-width: ${({ theme }) => theme.breakpoint.xl};\r\n  height: 100%;\r\n  margin: 0 auto;\r\n}`;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './core/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { GlobalStyle } from './GlobalStyle';\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from './theme';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyle />\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const theme = {\r\n    color: {\r\n        background: \"#ddd\",\r\n        innerContainerBackground: \"rgb(238 238 238 / 75%)\",\r\n        elementsText: \"#ebe6dc\",\r\n        elementsBackground: \"#133246\",\r\n        crimson: \"#DC143C\",\r\n        emerald: \"#086522\",\r\n    },\r\n    breakpoint: {\r\n        xs: \"480px\",\r\n        sm: \"576px\",\r\n        md: \"768px\",\r\n        lg: \"992px\",\r\n        xl: \"1200px\",\r\n        xxl: \"1400px\",\r\n    },\r\n}"],"sourceRoot":""}