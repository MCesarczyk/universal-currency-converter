{"version":3,"sources":["assets/images/background.png","core/Container/styled.js","core/Container/index.js","core/Form/getCurrentRates.js","core/Form/Clock/styled.js","core/Form/Clock/index.js","core/Form/Clock/useCurrentDate.js","core/Form/Buttons/styled.js","core/Form/Buttons/index.js","common/ContentWrapper/index.js","core/Form/styled.js","core/Form/currenciesLabels.js","core/Form/index.js","core/Switcher/styled.js","core/Switcher/index.js","core/languages.js","core/App.js","core/useLocalStorageState.js","reportWebVitals.js","GlobalStyle.js","index.js","theme.js"],"names":["ContainerWrapper","styled","div","background","theme","color","breakpoint","xl","ContainerElement","innerContainerBackground","md","sm","Container","children","getCurrentRates","currencyBase","a","apiUrl","baseURL","fetch","mode","response","ok","Error","json","console","error","message","success","ClockContainer","ClockElement","p","Clock","languages","language","date","useState","Date","setDate","useEffect","clockInterval","setInterval","clearInterval","useCurrentDate","clockLabel","toLocaleString","weekday","day","month","hour","minute","second","ButtonsContainer","xs","Button","button","elementsText","props","reset","crimson","emerald","Buttons","mainButtonLabel","type","resetButtonLabel","ContentWrapper","label","attrs","direction","vertical","Fieldset","fieldset","Legend","legend","elementsBackground","LabelText","span","FormInput","input","FormSelect","select","FormAnnotation","labelsEnglish","AUD","BGN","BRL","CAD","CHF","CLP","CNY","CZK","DKK","EUR","GBP","HKD","HRK","HUF","IDR","ILS","INR","ISK","JPY","KRW","MXN","MYR","NOK","NZD","PHP","PLN","RON","RUB","SEK","SGD","THB","TRY","UAH","USD","XDR","ZAR","labelsPolish","Form","headerTitle","inputLabel","listTitle","resultTitle","resultLabel","currentCurrency","setCurrentCurrency","ratesData","setRatesData","setTimeout","then","data","rates","wantedCurrency","setWantedCurrency","checkingDate","setCheckingDate","newAmount","setNewAmount","result","setResult","inputRef","useRef","currenciesLabels","filteredRates","Object","fromEntries","entries","filter","id","keys","includes","log","currentRate","values","findIndex","key","getExchangeRate","onSubmit","event","preventDefault","toFixed","dateLabel","current","focus","onReset","ref","value","placeholder","inputPlaceholder","min","step","required","autoFocus","onChange","target","name","map","indexOf","loadingMessage","undefined","errorMessage","wantedCurrencyLabel","LanguageButtons","Switcher","setLanguage","onLanguageChange","onClick","EN","PL","App","keyName","initialValue","localStorage","getItem","JSON","parse","state","setState","setItem","stringify","useLocalStorageState","document","title","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","lg","xxl","getElementById"],"mappings":"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","file":"static/js/main.31650cab.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.33e64e6f.png\";","import styled from \"styled-components\";\nimport background from \"../../assets/images/background.png\";\n\nexport const ContainerWrapper = styled.div`\n    background-image: url(\"${background}\");\n    background-size: contain;\n    background-position: center;\n    background-attachment: scroll;\n    background-color: ${({ theme }) => theme.color.background};\n    max-width: ${({ theme }) => theme.breakpoint.xl};\n    margin: 0 auto;\n    min-height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const ContainerElement = styled.div`\n    padding: 12px 24px;\n    border-radius: 24px;\n    background-color: ${({ theme }) => theme.color.innerContainerBackground};\n    width: ${({ theme }) => theme.breakpoint.md};\n\n    @media (max-width: ${({ theme }) => theme.breakpoint.md}) {\n        width: 100%;\n    }\n\n    @media (max-width: ${({ theme }) => theme.breakpoint.sm}) {\n        padding: 12px;\n    }\n`;","import { ContainerWrapper, ContainerElement } from \"./styled\";\n\nconst Container = ({ children }) => (\n    <ContainerWrapper>\n        <ContainerElement>\n            {children}\n        </ContainerElement>\n    </ContainerWrapper>\n);\n\nexport default Container;","export const getCurrentRates = async (currencyBase) => {\n  const baseURL = 'https://api.exchangerate.host/latest';\n  const apiUrl = baseURL + \"?base=\" + currencyBase || 'EUR';\n\n  try {\n    const response = await fetch(apiUrl, { mode: 'cors' });\n\n    if (!response.ok) {\n      throw new Error(\"No response\");\n    }\n\n    return await response.json();\n\n  } catch (error) {\n    console.error(error.message);\n    return { success: false };\n  }\n};","import styled from \"styled-components\";\n\nexport const ClockContainer = styled.div`\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-end;\n`;\n\nexport const ClockElement = styled.p`\n    font-family: monospace;\n    font-size: 12px;\n    margin: 0 0 24px 0;\n    text-align: center;\n`;","import { useCurrentDate } from \"./useCurrentDate\";\nimport { ClockContainer, ClockElement } from \"./styled\";\n\nconst Clock = ({ languages, language }) => {\n    const date = useCurrentDate();\n\n    return (\n        <ClockContainer>\n            <ClockElement>\n                {languages[language].clockLabel}\n                {\" \"}\n                {date.toLocaleString(language, {\n                    weekday: \"long\",\n                    day: \"numeric\",\n                    month: \"long\",\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                    second: \"2-digit\"\n                })}\n            </ClockElement>\n        </ClockContainer>\n    );\n};\n\nexport default Clock;","import { useState, useEffect } from \"react\";\n\nexport const useCurrentDate = () => {\n    const [date, setDate] = useState(new Date());\n\n    useEffect(() => {\n        const clockInterval = setInterval(() => {\n            setDate(new Date());\n        }, 1000);\n\n        return () => {\n            clearInterval(clockInterval);\n        };\n    }, []);\n\n    return date;\n};","import styled from \"styled-components\";\n\nexport const ButtonsContainer = styled.div`\n    display: flex;\n    justify-content: center;\n\n    @media (max-width: ${({ theme }) => theme.breakpoint.xs}) {\n            flex-direction: column;\n            align-items: center;\n    }\n`;\n\nexport const Button = styled.button`\n    color: ${({ theme }) => theme.color.elementsText};\n    background-color: ${({ theme }) => props => props.reset ? theme.color.crimson : theme.color.emerald};\n    border: none;\n    display: inline-block;\n    border-radius: 20px;\n    padding: 8px 16px;\n    margin: 5px 10px;\n    width: 45%;\n\n    @media (max-width: ${({ theme }) => theme.breakpoint.xs}) {\n        width: 100%;\n    }\n\n    &:hover {\n        filter: brightness(110%);\n    }\n\n    &:active {\n        filter: brightness(120%);\n    }\n`;","import { ButtonsContainer, Button } from \"./styled\";\n\nconst Buttons = ({ languages, language }) => (\n    <ButtonsContainer>\n        <Button>\n            {languages[language].mainButtonLabel}\n        </Button>\n        <Button reset type=\"reset\">\n            {languages[language].resetButtonLabel}\n        </Button>\n    </ButtonsContainer>\n);\n\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const ContentWrapper = styled.label.attrs(props => ({\r\n    type: \"text\",\r\n    direction: props.vertical ? \"column\" : \"row\",\r\n}))`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-direction: ${props => props.direction};\r\n    gap: 10px;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.sm}) {\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n    }\r\n`;","import styled from \"styled-components\";\n\nexport const Fieldset = styled.fieldset`\n    min-height: 100px;\n    border-radius: 20px;\n    padding: 16px 32px;\n    margin-bottom: 10px;\n\n    @media (max-width: ${({ theme }) => theme.breakpoint.sm}) {\n        min-height: 128px;\n    }\n\n    @media (max-width: ${({ theme }) => theme.breakpoint.xs}) {\n        padding: 16px;\n    }\n`;\n\nexport const Legend = styled.legend`\n    color: ${({ theme }) => theme.color.elementsText};\n    background-color: ${({ theme }) => theme.color.elementsBackground};\n    padding: 8px 24px;\n    border-style: none;\n    border-radius: 20px;\n    text-align: center;\n    width: 200px;\n`;\n\nexport const LabelText = styled.span`\n    display: block;\n    min-width: 125px;\n`;\n\nexport const FormInput = styled.input`\n    width: 100%;\n    border-radius: 8px;\n    height: 32px;\n    padding-left: 8px;\n`;\n\nexport const FormSelect = styled.select`\n    width: 100%;\n    border-radius: 8px;\n    height: 32px;\n    padding-left: 8px;\n`;\n\nexport const FormAnnotation = styled.p`\n    font-size: 12px;\n    text-align: right;\n    min-height: 13px;\n`;","export const labelsEnglish = {\n    AUD: \"Australian Dollar\",\n    BGN: \"Bulgarian Lev\",\n    BRL: \"Brazilian real\",\n    CAD: \"Canadian dollar\",\n    CHF: \"Swiss franc\",\n    CLP: \"Peso\",\n    CNY: \"Yuan renminbi\",\n    CZK: \"Czech Koruna\",\n    DKK: \"Danish Krone\",\n    EUR: \"Euro\",\n    GBP: \"Pound sterling\",\n    HKD: \"Hong Kong Dollar\",\n    HRK: \"Croatian Kuna\",\n    HUF: \"Hungarian Forint\",\n    IDR: \"Indonesian rupee\",\n    ILS: \"Israel new shekel\",\n    INR: \"Rupee\",\n    ISK: \"Icelandic Krona\",\n    JPY: \"Japanese yen\",\n    KRW: \"South Korean won\",\n    MXN: \"Mexican Peso\",\n    MYR: \"Malaysian ringgit\",\n    NOK: \"Norwegian krone\",\n    NZD: \"New Zealand dollar\",\n    PHP: \"Philippine Peso\",\n    PLN: \"Polish zloty\",\n    RON: \"Romanian Leu\",\n    RUB: \"Russian ruble\",\n    SEK: \"Swedish Krona\",\n    SGD: \"Singapore dollar\",\n    THB: \"Thailand bat\",\n    TRY: \"Turkish lira\",\n    UAH: \"Ukrainian hryvnia\",\n    USD: \"US dollar\",\n    XDR: \"Special Drawing Rights\",\n    ZAR: \"South African rand\",\n};\n\nexport const labelsPolish = {\n    AUD: \"Dolar australijski\",\n    BGN: \"Lew bułgarski\",\n    BRL: \"Real brazylijski\",\n    CAD: \"Dolar kanadyjski\",\n    CHF: \"Frank szwajcarski\",\n    CLP: \"Peso\",\n    CNY: \"Yuan renminbi\",\n    CZK: \"Korona czeska\",\n    DKK: \"Korona duńska\",\n    EUR: \"Euro\",\n    GBP: \"Funt szterling\",\n    HKD: \"Dolar hongkoński\",\n    HRK: \"Kuna chorwacka\",\n    HUF: \"Forint węgierski\",\n    IDR: \"Rupia Indonezyjska\",\n    ILS: \"Nowy szekel Izraelski\",\n    INR: \"Rupia\",\n    ISK: \"Korona islandzka\",\n    JPY: \"Jen japoński\",\n    KRW: \"Won Południowokoreański\",\n    MXN: \"Peso meksykańskie\",\n    MYR: \"Ringgit malezyjski\",\n    NOK: \"Korona norweska\",\n    NZD: \"Dolar nowozelandzki\",\n    PHP: \"Peso filipińskie\",\n    PLN: \"Polski złoty\",\n    RON: \"Lej rumuński\",\n    RUB: \"Rubel rosyjski\",\n    SEK: \"Korona szwedzka\",\n    SGD: \"Dolar singapurski\",\n    THB: \"Bat Tajski\",\n    TRY: \"Lira turecka\",\n    UAH: \"Hrywna ukraińska\",\n    USD: \"Dolar amerykański\",\n    XDR: \"SDR (MFW)\",\n    ZAR: \"Rand RPA\",\n};\n","import { useEffect, useRef, useState } from \"react\";\nimport { getCurrentRates } from \"./getCurrentRates\";\nimport Clock from \"./Clock\";\nimport Buttons from \"./Buttons\";\nimport { ContentWrapper } from \"../../common/ContentWrapper\";\nimport {\n  Fieldset,\n  Legend,\n  LabelText,\n  FormInput,\n  FormSelect,\n  FormAnnotation\n} from \"./styled\";\nimport { labelsEnglish, labelsPolish } from \"./currenciesLabels\";\n\nconst Form = ({\n  languages,\n  language,\n  headerTitle,\n  inputLabel,\n  listTitle,\n  resultTitle,\n  resultLabel\n}) => {\n  const [currentCurrency, setCurrentCurrency] = useState('EUR');\n  const [ratesData, setRatesData] = useState(null);\n  const DEMO_DELAY = 1_000;\n\n  useEffect(() => {\n    setTimeout(() => {\n      getCurrentRates(currentCurrency)\n        .then(data => setRatesData(data))\n    }, DEMO_DELAY);\n  }, [currentCurrency]);\n\n  const date = ratesData?.date;\n  const rates = ratesData?.rates;\n  const success = ratesData?.success;\n\n  const [wantedCurrency, setWantedCurrency] = useState(\"USD\");\n  const [checkingDate, setCheckingDate] = useState(\"\");\n  const [newAmount, setNewAmount] = useState(\"\");\n  const [result, setResult] = useState([]);\n\n  const inputRef = useRef(null);\n\n  const onCurrentCurrencyChange = ({ target }) => {\n    setCurrentCurrency(target.value);\n  };\n\n  const onWantedCurrencyChange = ({ target }) => {\n    setWantedCurrency(target.value);\n  };\n\n  const currenciesLabels = language === \"PL\" ? labelsPolish : labelsEnglish;\n\n  let filteredRates = null;\n\n  const filterRatesObject = () => {\n    if (rates) {\n      filteredRates = Object.fromEntries(Object.entries(rates).filter(\n        ([id]) => Object.keys(currenciesLabels).includes(id)));\n    };\n  };\n\n  filterRatesObject();\n\n  useEffect(() => {\n    console.log(`Exchange: ${currentCurrency}/${wantedCurrency}`);\n  }, [currentCurrency, wantedCurrency]);\n\n  const getExchangeRate = () => {\n    if (filteredRates) {\n      return (\n        Object.values(filteredRates)[Object.keys(filteredRates).findIndex(key => key === currentCurrency)]\n        /\n        Object.values(filteredRates)[Object.keys(filteredRates).findIndex(key => key === wantedCurrency)]\n      );\n    }\n  };\n\n  const currentRate = getExchangeRate();\n\n  const calculateResult = () => {\n    setResult(currentRate ? [(newAmount / currentRate).toFixed(2), \" \", wantedCurrency] : \"\");\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n\n    calculateResult();\n    setCheckingDate(`${languages[language].dateLabel}${date}`);\n    inputRef.current.focus();\n  };\n\n  const onFormReset = (event) => {\n    event.preventDefault();\n\n    setNewAmount(\"\");\n    setResult(\"\");\n    setCheckingDate(\"\");\n    setCurrentCurrency(\"EUR\");\n    setWantedCurrency(\"USD\");\n    inputRef.current.focus();\n  };\n\n  return (\n    <form onSubmit={onFormSubmit} onReset={onFormReset}>\n      <Fieldset>\n        <Legend>{headerTitle}</Legend>\n        <Clock\n          languages={languages}\n          language={language}\n        />\n        <ContentWrapper>\n          <LabelText>\n            {inputLabel}\n          </LabelText>\n          <FormInput\n            ref={inputRef}\n            value={newAmount}\n            placeholder={languages[language].inputPlaceholder + currentCurrency}\n            type=\"number\"\n            min=\"0.01\"\n            step=\"any\"\n            required\n            autoFocus\n            onChange={({ target }) => setNewAmount(target.value)}\n          />\n          <FormSelect name=\"currentCurrency\" value={currentCurrency} onChange={onCurrentCurrencyChange}>\n            {!currenciesLabels ?\n              <option>\n                {languages[language].loadingMessage}\n              </option>\n              :\n              Object.keys(currenciesLabels).map((key, value) => (\n                <option key={key} value={key}>\n                  {key}\n                  {\" - \"}\n                  {Object.values(currenciesLabels)[Object.keys(currenciesLabels).indexOf(key)]}\n                </option>\n              ))}\n          </FormSelect>\n        </ContentWrapper>\n      </Fieldset>\n      <Fieldset>\n        <Legend>{listTitle}</Legend>\n        <ContentWrapper vertical>\n          {success === undefined &&\n            <LabelText>\n              {languages[language].loadingMessage}\n            </LabelText>\n          }\n          {success === false &&\n            <LabelText>\n              {languages[language].errorMessage}\n            </LabelText>\n          }\n          {success === true &&\n            <ContentWrapper>\n              <LabelText>\n                {languages[language].wantedCurrencyLabel}\n              </LabelText>\n              <FormSelect name=\"wantedCurrency\" value={wantedCurrency} onChange={onWantedCurrencyChange}>\n                {filteredRates && Object.keys(filteredRates).map((key, value) => (\n                  <option key={key} value={key}>\n                    {(1 / (Object.values(filteredRates)[value])).toFixed(4)}\n                    {\" - \"}\n                    {key}\n                    {\" - \"}\n                    {Object.values(currenciesLabels)[Object.keys(currenciesLabels).indexOf(key)]}\n                  </option>\n                ))}\n              </FormSelect>\n            </ContentWrapper>\n          }\n        </ContentWrapper>\n      </Fieldset>\n      <Fieldset>\n        <Legend>{resultTitle}</Legend>\n        <ContentWrapper>\n          <LabelText>\n            {resultLabel}\n          </LabelText>\n          <div>\n            {result}\n          </div>\n        </ContentWrapper>\n        <FormAnnotation>\n          {checkingDate}\n        </FormAnnotation>\n        <Buttons\n          languages={languages}\n          language={language}\n        />\n      </Fieldset>\n    </form>\n  )\n}\n\nexport default Form;","import styled from \"styled-components\";\n\nexport const LanguageButtons = styled.div`\n    text-align: right;\n`;","import { LanguageButtons } from \"./styled\";\n\nconst Switcher = ({ languages, setLanguage }) => {\n\n    const onLanguageChange = ({ target }) => {\n        setLanguage(target.value);\n    };\n\n    return (\n        <LanguageButtons>\n            {Object.keys(languages).map((key) => (\n                <button\n                    key={key}\n                    value={key}\n                    onClick={onLanguageChange}\n                >\n                    {key}\n                </button>\n            ))}\n        </LanguageButtons>\n    )\n};\n\nexport default Switcher;","const languages = {\n  EN: {\n    headerTitle: \"Currency converter\",\n    inputLabel: \"You give:\",\n    inputPlaceholder: \"Amount in \",\n    wantedCurrencyLabel: \"Chosen currency:\",\n    listTitle: \"Currency selection\",\n    resultTitle: \"Calculated amount\",\n    resultLabel: \"You get: \",\n    clockLabel: \"Today is \",\n    loadingMessage: \"Loading... please wait\",\n    errorMessage: \"Unable to fetch data...\\n\" +\n    \"please check your internet connection.\",\n    mainButtonLabel: \"Calculate\",\n    resetButtonLabel: \"Reset\",\n    dateLabel: \"*rate valid on: \"\n  },\n  PL: {\n    headerTitle: \"e-Kantor\",\n    inputLabel: \"Wpłacasz:\",\n    inputPlaceholder: \"Kwota w \",\n    wantedCurrencyLabel: \"Wybrana waluta:\",\n    listTitle: \"Wybór waluty\",\n    resultTitle: \"Otrzymana kwota\",\n    resultLabel: \"Dostajesz: \",\n    clockLabel: \"Dzisiaj jest \",\n    loadingMessage: \"Pobieranie danych...\",\n    errorMessage: \"Nie udało się pobrać danych...\\n\" +\n    \"sprawdź swoje połączenie internetowe\",\n    mainButtonLabel: \"Przelicz\",\n    resetButtonLabel: \"Wyczyść\",\n    dateLabel: \"*wg kursu z dnia: \"\n  }\n};\n\nexport default languages;","import Container from \"./Container\";\nimport Form from \"./Form\";\nimport Switcher from \"./Switcher\";\nimport languages from \"./languages\";\nimport { useLocalStorageState } from \"./useLocalStorageState\";\n\nconst App = () => {\n  const [language, setLanguage] = useLocalStorageState(\"language\", \"EN\");\n\n  document.title = languages[language].headerTitle;\n\n  return (\n    <Container>\n      <Switcher\n        languages={languages}\n        language={language}\n        setLanguage={setLanguage}\n      />\n      <Form\n        languages={languages}\n        language={language}\n        headerTitle={languages[language].headerTitle}\n        inputLabel={languages[language].inputLabel}\n        listTitle={languages[language].listTitle}\n        resultTitle={languages[language].resultTitle}\n        resultLabel={languages[language].resultLabel}\n      />\n    </Container>\n  );\n}\n\nexport default App;","import { useState, useEffect } from \"react\";\n\nexport const useLocalStorageState = (keyName, initialValue) => {\n    const getInitialState = () => {\n        const localStorageState = localStorage.getItem(keyName);\n        if (localStorageState === null) {\n            return initialValue;\n        }\n\n        return JSON.parse(localStorage.getItem(keyName));\n    };\n    const [state, setState] = useState(getInitialState);\n\n    useEffect(() => {\n        localStorage.setItem(keyName, JSON.stringify(state))\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [state]);\n\n    return [state, setState];\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n\nhtml {\n  box-sizing: border-box;\n  height: 100%;\n}\n\n*, ::after, ::before {\n  box-sizing: inherit;\n}\n\n#root {\n  height: 100%;\n}\n\nbody {\n  font-family: 'Ubuntu', sans-serif;\n  background-color: ${({ theme }) => theme.color.background};\n  max-width: ${({ theme }) => theme.breakpoint.xl};\n  height: 100%;\n  margin: 0 auto;\n  min-width: 300px;\n}`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './core/App';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStyle } from './GlobalStyle';\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\n    color: {\n        background: \"#ddd\",\n        innerContainerBackground: \"rgb(238 238 238 / 75%)\",\n        elementsText: \"#ebe6dc\",\n        elementsBackground: \"#133246\",\n        crimson: \"#DC143C\",\n        emerald: \"#086522\",\n    },\n    breakpoint: {\n        xs: \"480px\",\n        sm: \"576px\",\n        md: \"768px\",\n        lg: \"992px\",\n        xl: \"1200px\",\n        xxl: \"1400px\",\n    },\n}"],"sourceRoot":""}